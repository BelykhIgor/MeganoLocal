-- создать контейнеры
docker-compose -f docker-compose.prod.yml up -d --build
docker-compose --progress plain -f docker-compose.prod.yml up -d --build

-- применить миграции внутри контейнера
docker-compose -f docker-compose.prod.yml exec web python manage.py migrate --noinput

-- собрать статические файлы внутри контейнера
docker-compose -f docker-compose.prod.yml exec web python manage.py collectstatic --no-input --clear  

-- остановить контейнеры
docker-compose -f docker-compose.prod.yml down -v 


# Установка фронтенда в проект
pip install diploma-frontend-0.6.tar.gz

# Установка пакета базы данных
pip install psycopg2==2.9.9
pip install psycopg2-binary==2.9.6

# Настройка базы данных
DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", 'django.db.backends.postgresql'),
        "NAME": os.environ.get("SQL_DATABASE", 'megano'),
        "USER": os.environ.get("SQL_USER", 'postgres'),
        "PASSWORD": os.environ.get("SQL_PASSWORD", 1234),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}

# Создаем админа
 python manage.py createsuperuser
 
#Установка django_rest_framework
pip install django_rest_framework

#Установка drf_spectacular
pip install drf_spectacular


docker-compose exec db psql --username=postgres --dbname=megano

docker-compose -f docker-compose.prod.yml exec web bash